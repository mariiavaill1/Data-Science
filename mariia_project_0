#Define the board
board = {'1': ' ', '2': ' ', '3': ' ', '4': ' ', '5': ' ', '6': ' ', '7': ' ', '8': ' ', '9': ' '}  
board_keys = []


for key in board:
    board_keys.append(key)
    
def print_board(board):
    print(board['1'] + '|' + board['2'] + '|' + board['3'])
    print('- - -')
    print(board['4'] + '|' + board['5'] + '|' + board['6'])
    print('- - -')
    print(board['7'] + '|' + board['8'] + '|' + board['9'])

#Ask players what are their names
player_1 = input("who is the first player? ")
player_2_input = 'x'

player_2 = input("who is another player? ")
player_2_input = 'o'

#Define the game function
def game():
    
    #Inform players about their turns
    print("\nDear " + player_1 + " your turn is x\n")
    print("\nDear " + player_2 + " your turn is o\n")
    
    count = 0
    current_player = player_1

    #Only perform the cycle when we don't run out of cells in the board
    while count <= 9:   
        
        if count % 2 == 0:
            print("It's your turn " + player_1 + "!")  
        else:
            print("It's your turn " + player_2 + "!") 
    
        #Check if entry is valid
        while True:
            try:
                move = input("\nWhere do you want to place your go from 1 to 9?\n")
                break
            except ValueError:
                print("Enter a valid number from 1 to 9")
        
        #Check if player is trying to use the cell which was chosen by another player
        if board[move] == ' ':
            if count % 2 == 0:
                board[move] = player_1_input
                count += 1
                current_player = player_1
            else:
                board[move] = player_2_input
                count += 1
                current_player = player_2  
        
            print_board(board)  

        #If player tried to use the cell which was already used, ask them to choose anotyher one
        else:
            print("Oops! It's already taken, choose another one!")
            continue
        
        #Check win combinations and call it a draw if there are none met
        if count >=5:
            if (board['1'] == board['2'] == board['3'] != " "): #first row
                print ("Our winner is " + current_player)
                print("\nGame Over\n")
                break 
            elif (board['4'] == board['5'] == board['6'] != " "):#second row
                print ("Our winner is " + current_player)
                print("\nGame Over\n")
                break 
            elif (board['7'] == board['8'] == board['9'] != " "):#third row
                print ("Our winner is " + current_player)
                print("\nGame Over\n")
                break 
            elif (board['1'] == board['4'] == board['7'] != " "): #first column
                print ("Our winner is " + current_player)
                print("\nGame Over\n")
                break      
            elif (board['2'] == board['5'] == board['8'] != " "): #second column
                print ("Our winner is " + current_player)
                print("\nGame Over\n")
                break
            elif (board['3'] == board['6'] == board['9'] != " "): #third column
                print ("Our winner is " + current_player)
                print("\nGame Over\n")
                break    
            elif (board['1'] == board['5'] == board['9'] != " "): #left to right diagonal
                print ("Our winner is " + current_player)
                print("\nGame Over\n")
                break  
            elif (board['3'] == board['5'] == board['7'] != " "): #right to left diagonal
                print ("Our winner is " + current_player)
                print("\nGame Over\n")
                break
            elif count == 9:
                print("It's a draw!\nGame Over\n")
                break
                    
            
            
            
game()      
